name: CI/CD Workflow

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

env:
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Backend
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven

      - name: Setup Maven
        uses: stCarolas/setup-maven@v4.5
        with:
          maven-version: '3.8.6'

      - name: Build and test backend
        run: |
          cd back
          mvn clean install
          echo "Backend tests completed"
          ls -la target/site/jacoco/ || echo "No JaCoCo report found"

      # Frontend
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '16'
          cache: 'npm'
          cache-dependency-path: front/package-lock.json

      - name: Build and test frontend
        run: |
          cd front
          npm ci
          npm run build --if-present
          npm test -- --no-watch --no-progress --browsers=ChromeHeadless --code-coverage
          echo "Frontend tests completed"

      # Archive test reports
      - name: Archive test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: |
            back/target/site/jacoco/
            front/coverage/
          retention-days: 5
          if-no-files-found: ignore

      # Sonar Backend
      - name: SonarCloud Scan Backend
        uses: SonarSource/sonarqube-scan-action@v5.0.0
        with:
          projectBaseDir: ./back
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Préparation et vérification couverture frontend
      - name: Prepare frontend coverage reports for SonarCloud
        run: |
          echo "==> Preparing coverage file"
          mkdir -p front/coverage
          if [ -f front/coverage/bobapp/lcov.info ]; then
            cp -v front/coverage/bobapp/lcov.info front/coverage/lcov.info
            echo "✅ Coverage file copied successfully."
          else
            echo "❌ ERROR: Coverage report not found at front/coverage/bobapp/lcov.info"
            exit 1
          fi

      - name: Debug frontend coverage presence
        run: |
          echo "==> Listing front/coverage content"
          ls -la front/coverage/
          echo "==> Preview of lcov.info:"
          cat front/coverage/lcov.info | head -n 20

      # Sonar Frontend
      - name: SonarCloud Scan Frontend
        uses: SonarSource/sonarqube-scan-action@v5.0.0
        with:
          projectBaseDir: ./front
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  push-docker-images:
    needs: build-and-test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push backend image
        uses: docker/build-push-action@v4
        with:
          context: ./back
          push: true
          tags: theonaulet/bobapp-back:latest

      - name: Build and push frontend image
        uses: docker/build-push-action@v4
        with:
          context: ./front
          push: true
          tags: theonaulet/bobapp-front:latest
