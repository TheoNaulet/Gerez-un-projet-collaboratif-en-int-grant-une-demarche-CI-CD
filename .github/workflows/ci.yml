name: CI/CD Workflow

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

env:
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # Backend
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven

      - name: Setup Maven
        uses: stCarolas/setup-maven@v4.5
        with:
          maven-version: '3.8.6'

      - name: Build and test backend
        run: |
          cd back
          mvn clean install
          echo "Backend tests completed"
          ls -la target/site/jacoco/ || echo "No JaCoCo report found"

      # Frontend
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '16'
          cache: 'npm'
          cache-dependency-path: front/package-lock.json

      - name: Build and test frontend (with LCOV)
        run: |
          cd front
          npm ci
          npm run build --if-present
          npm test -- --no-watch --no-progress --browsers=ChromeHeadless --code-coverage
          echo "Frontend tests completed"
          ls -la coverage/ || echo "No coverage report found"

      # Archive reports
      - name: Archive test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: |
            back/target/site/jacoco/
            front/coverage/
          retention-days: 5
          if-no-files-found: ignore

      # Analyse SonarCloud
      - name: SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@v5.0.0
        with:
          args: >
            -Dsonar.organization=theonaulet
            -Dsonar.projectKey=TheoNaulet_Gerez-un-projet-collaboratif-en-int-grant-une-demarche-CI-CD
            -Dsonar.projectName=Gerez-un-projet-collaboratif-en-int-grant-une-demarche-CI-CD
            -Dsonar.scm.provider=git
            -Dsonar.sources=.
            -Dsonar.inclusions=back/src/main/**/*,front/src/**/*
            -Dsonar.tests=back/src/test,front/src/app
            -Dsonar.test.inclusions=**/*.spec.ts,**/*Test.java
            -Dsonar.exclusions=**/node_modules/**,**/*.spec.ts,**/dist/**,**/coverage/**,**/.mvn/**,**/target/**
            -Dsonar.java.binaries=back/target/classes
            -Dsonar.java.test.binaries=back/target/test-classes
            -Dsonar.javascript.lcov.reportPaths=front/coverage/lcov.info
            -Dsonar.coverage.jacoco.xmlReportPaths=back/target/site/jacoco/jacoco.xml

  push-docker-images:
    needs: build-and-test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build backend image
        run: |
          docker build -t theonaulet/bobapp-back:latest ./back

      - name: Build frontend image
        run: |
          docker build -t theonaulet/bobapp-front:latest ./front

      - name: Push backend image
        run: docker push theonaulet/bobapp-back:latest

      - name: Push frontend image
        run: docker push theonaulet/bobapp-front:latest
